name: Deploy NestJS Employee API to Azure Container Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_APP: employee-api-env
  AZURE_CONTAINER_ENVIRONMENT: employee-api-env
  AZURE_RESOURCE_GROUP: rg-employee-api
  CONTAINER_REGISTRY: cremployeeapi.azurecr.io
  REGISTRY_NAME: cremployeeapi
  IMAGE_NAME: employee-api
  NODE_VERSION: '20'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üõí Checkout code
      uses: actions/checkout@v4
    
    - name: üü¢ Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: üì¶ Install dependencies
      run: |
        npm ci --prefer-offline --no-audit
        
    - name: üß™ Run tests
      run: npm test
    
    - name: üî® Build application
      run: npm run build
    
    - name: üîê Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: üê≥ Log in to Azure Container Registry
      run: |
        echo ${{ secrets.REGISTRY_PASSWORD }} | docker login ${{ env.CONTAINER_REGISTRY }} \
          --username ${{ secrets.REGISTRY_USERNAME }} \
          --password-stdin
    
    - name: üèóÔ∏è Build and push Docker image
      run: |
        # Build image with multiple tags
        docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                     -t ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
        
        # Push both tags
        docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
    
    - name: üöÄ Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v2
      with:
        acrName: ${{ env.REGISTRY_NAME }}
        acrUsername: ${{ secrets.REGISTRY_USERNAME }}
        acrPassword: ${{ secrets.REGISTRY_PASSWORD }}
        containerAppName: ${{ env.AZURE_CONTAINER_APP }}
        resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
        imageToDeploy: ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        targetPort: 3000
        ingress: external
        environmentVariables: |
          PORT=3000
          NODE_ENV=production
    
    - name: ‚úÖ Deployment Summary
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üì± Container App: ${{ env.AZURE_CONTAINER_APP }}"
        echo "üè∑Ô∏è Image Tag: ${{ github.sha }}"
        echo "üåê Check your Container App URL in Azure Portal"